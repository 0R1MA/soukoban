#include "DxLib.h"
#include <iostream>
#include <math.h>
#include <memory>
#include <vector>
#include "Anim.h"
#include "Player.h"
#include "Stage.h"
#include "Object.h"
#include "GameManeger.h"

const int ScreenX = 660;
const int ScreenY = 660;

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
	// ウインドウモードで起動
	ChangeWindowMode(TRUE);
	SetGraphMode(ScreenX, ScreenY, 32);
	// 初期化
	if (DxLib_Init() < 0)
	{
		return -1;
	}

	// 初期化
	std::shared_ptr<Player>			player	= std::make_shared<Player>();
	std::shared_ptr<Stage>			stage	= std::make_shared<Stage>();
	std::shared_ptr<GameManeger>	game	= std::make_shared<GameManeger>();
	
	std::vector<std::shared_ptr<Object>> objects;	// オブジェクトのリスト
	for(int i = 0; i < 10; ++i)						// 例として10個のオブジェクトを作成
	{
		auto obj = std::make_shared<Object>();
		objects.emplace_back(obj);					// オブジェクトをリストに追加
	}
	stage->Initialize(player, objects, game);				// ステージの初期化

	// 描画先を裏画面にする
	SetDrawScreen(DX_SCREEN_BACK);

	// ＥＳＣキーが押されるか、ウインドウが閉じられるまでループ
	while (ProcessMessage() == 0 && CheckHitKey(KEY_INPUT_ESCAPE) == 0)
	{
		auto prevTime = GetNowHiPerformanceCount();	// 処理が始まる前の時間

		// 画面をクリア
		ClearDrawScreen();

		////更新処理////
		game->Update(objects);
		for (auto obj : objects)
		{
			obj->Update();				// オブジェクトの更新処理
		}
		player->Update(stage, objects);	// プレイヤーの更新処理
	

		////描画////
		stage->Draw();					// ステージの描画処理
		for (auto obj : objects)
		{
			obj->Draw();				// オブジェクトの描画処理
		}
		player->Draw();					// プレイヤーの描画処理
		game->Draw();

		// 裏画面の内容を表画面に反映
		ScreenFlip();

		// 雑なfps固定処理
		// 差を求めて、1回の画面更新が1/60秒になるようにwhileループ回して待つ
		auto afterTime = GetNowHiPerformanceCount(); // 処理が終わった後の時間
		while (afterTime - prevTime < 16667)
		{
			afterTime = GetNowHiPerformanceCount();
		}
	}

	// 後始末
	player	= nullptr;
	stage	= nullptr;
	game	= nullptr;
	objects.clear();
	DxLib_End();

	// ソフト終了
	return 0;
}